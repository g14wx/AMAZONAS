name: Laravel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.0'
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Static Analysis via PHPStan
        run: ./vendor/bin/phpstan analyse --memory-limit=2G
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

  build:
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.laravel-tests.result!='failure') }}
    needs: [ laravel-tests ]

    steps:

      - name: Checkout

        uses: actions/checkout@v2

      - name: Setup Node.js

        uses: actions/setup-node@v2-beta

        with:

          node-version: '12'

          check-latest: true

      - name: Install NPM dependencies

        run: npm install

      - name: Compile assets for production

        run: npm run production

      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "amazonas-latam"
          heroku_email: "goth14wx@gmail.com"

  run-if-fail-laravel-test:
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.laravel-tests.result=='failure') }}
    needs: [ laravel-tests ]
    steps:
      - name: SET AN ISSUE ABOUT THIS PROBLEM
        run: |

          curl --request POST \

          --url https://api.github.com/repos/${{ github.repository }}/issues \

          --header 'authorization: Bearer ${{ secrets.PAT_GITHUB_TOKEN }}' \

          --header 'content-type: application/json' \

          --data '{

            "title": "Issue created due to workflow fialure: ${{ github.run_id }}",

            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n due to failure in run: _${{ github.run_id }}_."

            }'
